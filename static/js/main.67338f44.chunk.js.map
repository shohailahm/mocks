{"version":3,"sources":["logo.svg","Components/Slider.js","Components/Table.js","utils/columns.js","utils/mockData.js","Components/Form.js","Components/Documents.js","Components/Description.js","Components/InfoComponent.js","Components/Overlay.js","Components/Tabs.js","Containers/home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","SliderComponent","state","mode","theme","changeMode","value","setState","changeTheme","data","this","props","children","style","width","marginVertical","defaultSelectedKeys","defaultOpenKeys","map","item","i","Item","key","className","type","React","Component","TableComponent","showOverlay","over","showover","columns","showFav","dataSource","onChange","handleChange","columnsData","show","fn","title","dataIndex","render","fav","text","row","onClick","color","indType","defaultSortOrder","sorter","a","b","length","raise","valuation","received","location","status","mockData","name","Form","ev","target","submit","onSubmit","notification","open","message","description","marginTop","gutter","span","placeholder","required","Documents","textAlign","marginLeft","fontSize","header","docs","icon","DesscriptionBox","borderRadius","backgroundColor","padding","marginBottom","InfoComponent","console","log","display","justifyContent","overflow","tip","TabPane","Tabs","Overlay","toggleoverlay","toggle","tab","Content","Layout","Header","TabsComponent","Footer","Sider","showForm","dataTable","callback","toggleForm","current","add","details","push","data-test","defaultActiveKey","Home","minHeight","breakpoint","collapsedWidth","onBreakpoint","broken","onCollapse","collapsed","height","App","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.67338f44.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React from 'react';\nimport { Menu, Icon, Switch } from 'antd';\nimport './slider.less';\n\nexport default class SliderComponent extends React.Component {\n  state = {\n    mode: 'inline',\n    theme: 'light',\n  };\n\n  changeMode = value => {\n    this.setState({\n      mode: value ? 'vertical' : 'inline',\n    });\n  };\n\n  changeTheme = value => {\n    this.setState({\n      theme: value ? 'dark' : 'light',\n    });\n  };\n\n  render() {\n      const {props:{data}}=this;\n    return (\n      <div>\n        {\n              this.props.children\n          }\n        <Menu\n          style={{ width: '100%',marginVertical:8 }}\n          defaultSelectedKeys={['1']}\n          defaultOpenKeys={['sub1']}\n          mode={this.state.mode}\n          theme={this.state.theme}\n          {...this.props}\n        >\n            {\n                data.map((item,i)=>(\n                    <Menu.Item key={i+1} className=\"customclass\">\n                        <Icon type=\"mail\" />\n                        {item}\n                     </Menu.Item>\n                ))\n            }\n       \n          \n        </Menu>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Table, Button } from 'antd';\nimport './table.less';\nexport default class TableComponent extends React.Component{\n    showOverlay=(over)=>{\n     this.props.showover(over);\n    }\n    render(){\n        const {columns,data,showFav}=this.props;\n        return(\n            <div>\n                <Table columns={columns(showFav,this.showOverlay)} dataSource={data} onChange={this.handleChange} />\n            </div>\n        )\n    }\n}","import React from 'react'\nimport { Badge } from 'antd'\nimport { Icon } from 'antd';\nconst columnsData =(show,fn)=>([\n    {\n        title: 'fav',\n         dataIndex: 'fav',\n        className: show? \"show\" : \"hide\",\n      render: (fav) => <>\n        <Icon type=\"star\" theme={fav?\"twoTone\":\"outlined\"} />\n      </>\n      },\n    {\n      title: 'Name & Industry Type',\n      dataIndex: 'name',\n      key:'name',\n      render: (text,row) => <><a onClick={()=>{fn(row)}}>{text}</a>\n      <p style={{color:'grey'}}>{row.indType}</p>\n    </>\n    },\n    {\n      title: 'Issunace Type',\n      dataIndex: 'type',\n      defaultSortOrder: 'descend',\n      sorter: (a, b) => a.type.length - b.type.length,\n    },\n    {\n        title: 'Target Raise',\n        dataIndex: 'raise',\n        defaultSortOrder: 'descend',\n        sorter: (a, b) => a.raise - b.raise,\n    },\n    {\n        title: 'Pre-money valuation',\n        dataIndex: 'valuation',\n        defaultSortOrder: 'descend',\n        sorter: (a, b) => a.valuation- b.valuation,\n    },\n    {\n        title: 'Amount Received',\n        dataIndex: 'received',\n        defaultSortOrder: 'descend',\n        sorter: (a, b) => a.received- b.received,\n    },\n    {\n        title: 'Location',\n        dataIndex: 'location',\n        defaultSortOrder: 'descend',\n        sorter: (a, b) => a.location.length - b.location.length,\n    },  {\n        title: 'Status',\n        dataIndex: 'status',\n        defaultSortOrder: 'descend',\n        sorter: (a, b) => a.status.length - b.status.length,\n        render: text => <><Badge status={text===\"closed\"?\"success\":'processing'}/>{text}</>,\n    },\n  ]);\n\n  export default columnsData;","const mockData=[\n    {name:'Energy Infrastructure',indType:'Financial Service',type:'equity',raise:'$23M',valuation:'$1M',location:'US',status:'in-progress',received:'$1M',fav:false},\n    {name:'ABC ',indType:'Financial Service',type:'Investment Fund',raise:'$23M',valuation:'$1M',location:'Europe',status:'in-progress',received:'$1M',fav:true},\n    {name:'Alternate Gas extension',indType:'space',type:'Debt',raise:'$23M',valuation:'$1M',location:'US',status:'closed',received:'$1M',fav:false}\n];\n\nexport default mockData;","import React from 'react';\nimport {Input,Row,Col, Button,notification} from 'antd';\n\n\nexport default class Form extends React.Component{\n  state={\n\n  }\n  onChange=(ev)=>{\n    debugger\n    this.setState({[ev.target.name]:ev.target.value});\n  }\n  submit=()=>{\n    const {name,indType,type,raise,valuation,received,location,status}=this.state;\n    if(name&&indType&&type&&raise&&valuation&&received&&location&&status){\n     this.props.onSubmit(this.state);\n      return this.setState({});\n    }else{\n      debugger\n      notification.open({\n        message: 'Error',\n        description:\n          'all feilds are mandatory'\n      });\n    }\n  }\n    render(){\n      return( \n           <div style={{marginTop:20}}>\n                <Row gutter={16}>\n                   \n                        <Col span={6} className=\"gutter-row\"><Input placeholder=\"Name\" name=\"name\" required onChange={this.onChange}/></Col>\n                        <Col span={6} className=\"gutter-row\"><Input placeholder=\"Industry Type\" name=\"indType\" required onChange={this.onChange}/></Col>\n                        <Col span={6} className=\"gutter-row\"><Input placeholder=\"Issuance Type\" name=\"type\" required onChange={this.onChange}/></Col>\n                        <Col span={6} className=\"gutter-row\"><Input placeholder=\"Target Raise\" name=\"raise\" required onChange={this.onChange}/></Col>\n                  \n                </Row>\n                <Row gutter={16}>\n                   \n                        <Col span={6} className=\"gutter-row\"><Input placeholder=\"pre-money valuation\" name=\"valuation\" required onChange={this.onChange}/></Col>\n                        <Col span={6} className=\"gutter-row\"><Input placeholder=\"Amount Received\" name=\"received\" required onChange={this.onChange}/></Col>\n                        <Col span={6} className=\"gutter-row\"><Input placeholder=\"location\" name=\"location\" required onChange={this.onChange}/></Col>\n                        <Col span={6} className=\"gutter-row\"><Input placeholder=\"status\" required name=\"status\" onChange={this.onChange}/></Col>\n             \n           </Row>\n           <Button type=\"primary\" onClick={this.submit}>Submit</Button>\n          </div>\n      );\n    }\n}","import React from 'react';\nimport './overlay.less';\nimport { Button } from 'antd';\nexport default class Documents extends React.Component{\n    render(){\n        return(\n            <div>\n              <h2 style={{textAlign:'left',marginLeft:8,fontSize:'bold'}}>{this.props.header}</h2>\n             {this.props.docs && this.props.docs.map((item)=>(<div className=\"rows\">\n               <h3>{item}</h3>\n               <Button type=\"link\" icon=\"download\">\n                  Download\n               </Button>\n             </div>))}\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './overlay.less';\nimport Documents from './Documents';\nexport default class DesscriptionBox extends React.Component{\n    render(){\n        return(\n        <div>\n        <div style={{borderRadius:4,width:'80%',backgroundColor:'#fff',textAlign:'left',marginLeft:'10%',marginTop:16,padding:16}}>\n           <h3>Description</h3>\n           Descrtipon goes here, whatever the descrption are there. \n           it must be shown in a particular format , the readablity of the user should be also taken \n           into consedration\n        </div>\n        <div style={{borderRadius:4,width:'80%',backgroundColor:'#fff',textAlign:'left',marginLeft:'10%',marginTop:16,padding:16}}>\n           <h3>Required</h3>\n            <div className=\"row\">\n                <h4>Date of creation</h4>\n                <span>may 24,2019</span>\n            </div>\n            <div className=\"row\">\n                <h4>Country of Issuance</h4>\n                <span>US</span>\n            </div>\n            <div className=\"row\">\n                <h4>Industry</h4>\n                <span>Renewable Energy</span>\n            </div>\n            <div className=\"row\">\n                <h4>Total shared</h4>\n                <span>10,000,000</span>\n            </div>\n            <div className=\"row\">\n                <h4>Free Float</h4>\n                <span>1,000,000</span>\n            </div>\n            <div className=\"row\">\n                <h4>Price per share</h4>\n                <span>$100</span>\n            </div>\n        </div>\n        <Documents header=\"Common documents\" docs={['MarketingDocs.docx','Presentation.pptx']}/>\n        <Documents header=\"Confidentail documents\" docs={['Executive.docx','issuanceSummary.xls']}/>\n        <div style={{textAlign:'left',marginLeft:8,marginBottom:8}}>\n           <h4>sourcing party</h4>\n            John Murphy\n            <p style={{color:'gray'}}>john@gmail.com</p>\n        </div>\n        <div style={{textAlign:'left',marginLeft:8,marginBottom:8}}>\n        <h4>issuing party</h4>\n         John doe\n         <p style={{color:'gray'}}>johndoe@gmail.com</p>\n        </div>\n        \n        </div>\n        );\n    }\n}","import React from 'react';\nimport { Spin, Alert } from 'antd';\nimport './overlay.less';\nimport DesscriptionBox from './Description';\nexport default class InfoComponent extends React.Component{\n    render(){\n        const {data}=this.props;\n        console.log(data);\n        if(!this.props.data){\n          return  <Spin tip=\"Loading...\">\n            <Alert\n              message=\"Alert message title\"\n              description=\"Further details about the context of this alert.\"\n              type=\"info\"\n            />\n          </Spin>\n        }\n        return(\n            <div>\n                 <div style={{display:'flex',justifyContent:'space-around',overflow:'auto'}}>\n                     <div>\n                       Target Raised  \n                       <div className=\"info\">\n                      {data.raise}  \n                     </div>\n                     </div>\n                     <div>\n                      Amount Received\n                      <div className=\"info\">\n                      {data.received}   \n                     </div>   \n                     </div>\n                     <div>\n                       Valuation \n                       <div className=\"info\">\n                       {data.valuation} \n                     </div>\n                     </div>\n                     <div>\n                       status\n                       <div className=\"info\">\n                       {data.status} \n                     </div> \n                     </div>\n                 </div>\n                <DesscriptionBox/>\n                 \n            </div>\n        )\n    }\n}","import React from 'react';\nimport './overlay.less';\nimport { Tabs } from 'antd';\nimport InfoComponent from './InfoComponent';\nconst { TabPane } = Tabs;\nexport default class Overlay extends React.Component{\n    toggleoverlay=()=>{\n        this.props.toggle();\n    }\n    render(){\n        return(\n            <div className=\"overlay\">\n               \n               <div className=\"white-div\">\n                  <a onClick={this.toggleoverlay}>close </a>\n                  <Tabs>\n                      <TabPane tab=\"Deal Info\" key=\"1\">\n                         <InfoComponent data={this.props.data}/>\n                      </TabPane>\n                      <TabPane tab=\"Additional Info\" key=\"2\">\n\n                      </TabPane>\n                  </Tabs>\n               </div>\n               <div className=\"emptyoverlay\">\n\n               </div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport { Tabs,Layout,Button,Input } from 'antd';\nimport TableComponent from './Table';\nimport columnsData from '../utils/columns';\nimport mockData from '../utils/mockData';\nimport Form from './Form';\nimport Overlay from './Overlay';\n\nconst { TabPane } = Tabs;\nconst { Header, Content, Footer, Sider } = Layout;\nexport default class TabsComponent extends React.Component{\n    state={\n      showForm:false,\n      showOverlay:false,\n      dataTable:mockData\n    }\n    callback = key =>{\n        console.log(key);\n      }\n      toggleForm=()=>{\n          this.setState({showForm:!this.state.showForm});\n      }\n      showOverlay=(show)=>{\n          this.setState({showOverlay:!this.state.showOverlay,current:show});\n      }\n      add=(details)=>{\n        let data=[...this.state.dataTable];\n        data.push({name:details.name,indType:details.indType,type:details.type,raise:details.raise,valuation:details.valuation,location:details.location,status:details.status,received:details.received,fav:false})\n        this.setState({dataTable:data});\n        this.toggleForm();\n      }\n  render(){\n      return(\n          <div>\n            {this.state.showOverlay && <Overlay toggle={this.showOverlay} data={this.state.current} />}\n              <Content style={{padding:30,backgroundColor:'#fff'}}>\n                  \n                  <h3>Deal Room</h3>\n                   <Button onClick={this.toggleForm}>{this.state.showForm?\"Close\":\"Add Insurance\"}</Button>\n                   {this.state.showForm && <Form onSubmit={this.add} data-test=\"form\"/> }\n                <Tabs defaultActiveKey=\"1\" onChange={this.callback} data-test=\"component-tabs\">\n                    <TabPane tab=\"External Issuances\" key=\"1\">\n                      <TableComponent showover={this.showOverlay} columns={columnsData} data={this.state.dataTable}/>\n                    </TabPane>\n                    <TabPane tab=\"Favorite Issuances\" key=\"2\">\n                      <TableComponent showover={this.showOverlay} columns={columnsData} showFav={true} data={this.state.dataTable}/>\n                    </TabPane>\n                    <TabPane tab=\"My Issuances\" key=\"3\">\n                      <TableComponent showover={this.showOverlay} columns={columnsData} showFav={true} data={this.state.dataTable}/>\n                    </TabPane>\n                    <TabPane tab=\"MNDA Managament\" key=\"4\">\n                    </TabPane>\n                </Tabs>\n            </Content>\n          </div>\n      )\n  }\n}","import React from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n  } from \"react-router-dom\";\nimport { Layout, Menu, Icon } from 'antd';\nimport SliderComponent from '../Components/Slider';\nimport './home.less';\nimport TabsComponent from '../Components/Tabs';\nconst { Header, Content, Footer, Sider } = Layout;\n\n\nconst data=['Deal Room','Broker-Dealer Registry', 'Insurance-Statitics'];\nexport default class Home extends React.Component{\n    render(){\n        return(\n            <Layout style={{backgroundColor:'#fff',minHeight:'100vh'}}>\n            <Sider\n              breakpoint=\"lg\"\n              collapsedWidth=\"0\"\n              onBreakpoint={broken => {\n                console.log(broken);\n              }}\n              onCollapse={(collapsed, type) => {\n                console.log(collapsed, type);\n              }}\n              theme=\"light\"\n              \n            >\n              <div className=\"logo\" />\n              <div className=\"sideNav\">\n              <SliderComponent data={data}/>\n              </div>\n            </Sider>\n            <Layout>\n            <div style={{height:60}}>\n                \n            </div>\n         \n                       <TabsComponent/>\n                   \n            </Layout>\n          </Layout>\n        \n        )\n    }\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Home from './Containers/home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div>\n        \n             <Home />\n            \n      </div>\n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'antd/dist/antd.less';\nimport './theme.less';    \nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}